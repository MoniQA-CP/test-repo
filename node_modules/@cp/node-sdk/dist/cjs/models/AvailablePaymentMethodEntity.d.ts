/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
import type { TransactionFeeDetailsEntity } from './TransactionFeeDetailsEntity';
/**
 *
 * @export
 * @interface AvailablePaymentMethodEntity
 */
export interface AvailablePaymentMethodEntity {
    /**
     * The method of the available payment method.
     * @type {string}
     * @memberof AvailablePaymentMethodEntity
     */
    method: AvailablePaymentMethodEntityMethodEnum;
    /**
     * The adjusted total with fess of selected payment method.
     * @type {number}
     * @memberof AvailablePaymentMethodEntity
     */
    adjustedTotal: number;
    /**
     * The adjusted fees total with fees of selected payment method.
     * @type {number}
     * @memberof AvailablePaymentMethodEntity
     */
    feesTotal: number;
    /**
     * The fees of the available payment method.
     * @type {Array<TransactionFeeDetailsEntity>}
     * @memberof AvailablePaymentMethodEntity
     */
    fees?: Array<TransactionFeeDetailsEntity>;
}
/**
 * @export
 */
export declare const AvailablePaymentMethodEntityMethodEnum: {
    readonly Ach: "ACH";
    readonly Bank: "BANK";
    readonly Card: "CARD";
};
export type AvailablePaymentMethodEntityMethodEnum = typeof AvailablePaymentMethodEntityMethodEnum[keyof typeof AvailablePaymentMethodEntityMethodEnum];
/**
 * Check if a given object implements the AvailablePaymentMethodEntity interface.
 */
export declare function instanceOfAvailablePaymentMethodEntity(value: object): boolean;
export declare function AvailablePaymentMethodEntityFromJSON(json: any): AvailablePaymentMethodEntity;
export declare function AvailablePaymentMethodEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): AvailablePaymentMethodEntity;
export declare function AvailablePaymentMethodEntityToJSON(value?: AvailablePaymentMethodEntity | null): any;
