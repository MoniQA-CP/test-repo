"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AvailablePaymentMethodEntityMethodEnum = void 0;
exports.instanceOfAvailablePaymentMethodEntity = instanceOfAvailablePaymentMethodEntity;
exports.AvailablePaymentMethodEntityFromJSON = AvailablePaymentMethodEntityFromJSON;
exports.AvailablePaymentMethodEntityFromJSONTyped = AvailablePaymentMethodEntityFromJSONTyped;
exports.AvailablePaymentMethodEntityToJSON = AvailablePaymentMethodEntityToJSON;
const runtime_1 = require("../runtime");
const TransactionFeeDetailsEntity_1 = require("./TransactionFeeDetailsEntity");
/**
 * @export
 */
exports.AvailablePaymentMethodEntityMethodEnum = {
    Ach: 'ACH',
    Bank: 'BANK',
    Card: 'CARD'
};
/**
 * Check if a given object implements the AvailablePaymentMethodEntity interface.
 */
function instanceOfAvailablePaymentMethodEntity(value) {
    let isInstance = true;
    isInstance = isInstance && "method" in value;
    isInstance = isInstance && "adjustedTotal" in value;
    isInstance = isInstance && "feesTotal" in value;
    return isInstance;
}
function AvailablePaymentMethodEntityFromJSON(json) {
    return AvailablePaymentMethodEntityFromJSONTyped(json, false);
}
function AvailablePaymentMethodEntityFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    const typed = {
        'method': json['method'],
        'adjustedTotal': json['adjustedTotal'],
        'feesTotal': json['feesTotal'],
        'fees': !(0, runtime_1.exists)(json, 'fees') ? undefined : (json['fees'].map(TransactionFeeDetailsEntity_1.TransactionFeeDetailsEntityFromJSON)),
    };
    return (0, runtime_1.removeNullUndefined)(typed);
}
function AvailablePaymentMethodEntityToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'method': value.method,
        'adjustedTotal': value.adjustedTotal,
        'feesTotal': value.feesTotal,
        'fees': value.fees === undefined ? undefined : (value.fees.map(TransactionFeeDetailsEntity_1.TransactionFeeDetailsEntityToJSON)),
    };
}
