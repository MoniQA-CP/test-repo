"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfBuyersAddressEntity = instanceOfBuyersAddressEntity;
exports.BuyersAddressEntityFromJSON = BuyersAddressEntityFromJSON;
exports.BuyersAddressEntityFromJSONTyped = BuyersAddressEntityFromJSONTyped;
exports.BuyersAddressEntityToJSON = BuyersAddressEntityToJSON;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the BuyersAddressEntity interface.
 */
function instanceOfBuyersAddressEntity(value) {
    let isInstance = true;
    isInstance = isInstance && "city" in value;
    isInstance = isInstance && "countryCode" in value;
    isInstance = isInstance && "postalCode" in value;
    isInstance = isInstance && "subdivision" in value;
    isInstance = isInstance && "streetAddress" in value;
    return isInstance;
}
function BuyersAddressEntityFromJSON(json) {
    return BuyersAddressEntityFromJSONTyped(json, false);
}
function BuyersAddressEntityFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    const typed = {
        'city': json['city'],
        'countryCode': json['countryCode'],
        'postalCode': json['postalCode'],
        'subdivision': json['subdivision'],
        'streetAddress': json['streetAddress'],
        'streetAddress2': !(0, runtime_1.exists)(json, 'streetAddress2') ? undefined : json['streetAddress2'],
        'subdivisionCode': !(0, runtime_1.exists)(json, 'subdivisionCode') ? undefined : json['subdivisionCode'],
    };
    return (0, runtime_1.removeNullUndefined)(typed);
}
function BuyersAddressEntityToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'city': value.city,
        'countryCode': value.countryCode,
        'postalCode': value.postalCode,
        'subdivision': value.subdivision,
        'streetAddress': value.streetAddress,
        'streetAddress2': value.streetAddress2,
        'subdivisionCode': value.subdivisionCode,
    };
}
