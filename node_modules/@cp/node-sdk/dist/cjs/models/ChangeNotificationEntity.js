"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfChangeNotificationEntity = instanceOfChangeNotificationEntity;
exports.ChangeNotificationEntityFromJSON = ChangeNotificationEntityFromJSON;
exports.ChangeNotificationEntityFromJSONTyped = ChangeNotificationEntityFromJSONTyped;
exports.ChangeNotificationEntityToJSON = ChangeNotificationEntityToJSON;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the ChangeNotificationEntity interface.
 */
function instanceOfChangeNotificationEntity(value) {
    let isInstance = true;
    isInstance = isInstance && "changeNotificationId" in value;
    isInstance = isInstance && "returnCode" in value;
    isInstance = isInstance && "transactionId" in value;
    isInstance = isInstance && "merchantId" in value;
    isInstance = isInstance && "merchantAccountId" in value;
    isInstance = isInstance && "acknowledged" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;
    return isInstance;
}
function ChangeNotificationEntityFromJSON(json) {
    return ChangeNotificationEntityFromJSONTyped(json, false);
}
function ChangeNotificationEntityFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    const typed = {
        'changeNotificationId': json['changeNotificationId'],
        'correctedData': !(0, runtime_1.exists)(json, 'correctedData') ? undefined : json['correctedData'],
        'returnCode': json['returnCode'],
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : json['description'],
        'transactionId': json['transactionId'],
        'merchantId': json['merchantId'],
        'merchantAccountId': json['merchantAccountId'],
        'acknowledged': json['acknowledged'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'acknowledgedDate': !(0, runtime_1.exists)(json, 'acknowledgedDate') ? undefined : (new Date(json['acknowledgedDate'])),
        'customerId': !(0, runtime_1.exists)(json, 'customerId') ? undefined : json['customerId'],
    };
    return (0, runtime_1.removeNullUndefined)(typed);
}
function ChangeNotificationEntityToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'changeNotificationId': value.changeNotificationId,
        'correctedData': value.correctedData,
        'returnCode': value.returnCode,
        'description': value.description,
        'transactionId': value.transactionId,
        'merchantId': value.merchantId,
        'merchantAccountId': value.merchantAccountId,
        'acknowledged': value.acknowledged,
        'createdAt': (value.createdAt.toISOString()),
        'updatedAt': (value.updatedAt.toISOString()),
        'acknowledgedDate': value.acknowledgedDate === undefined ? undefined : (value.acknowledgedDate.toISOString()),
        'customerId': value.customerId,
    };
}
