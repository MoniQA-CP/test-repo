"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConnectorServiceTokenEntityConnectorEnum = void 0;
exports.instanceOfConnectorServiceTokenEntity = instanceOfConnectorServiceTokenEntity;
exports.ConnectorServiceTokenEntityFromJSON = ConnectorServiceTokenEntityFromJSON;
exports.ConnectorServiceTokenEntityFromJSONTyped = ConnectorServiceTokenEntityFromJSONTyped;
exports.ConnectorServiceTokenEntityToJSON = ConnectorServiceTokenEntityToJSON;
const runtime_1 = require("../runtime");
/**
 * @export
 */
exports.ConnectorServiceTokenEntityConnectorEnum = {
    Epay: 'EPAY',
    ChannelPayments: 'CHANNEL_PAYMENTS',
    Tsys: 'TSYS'
};
/**
 * Check if a given object implements the ConnectorServiceTokenEntity interface.
 */
function instanceOfConnectorServiceTokenEntity(value) {
    let isInstance = true;
    isInstance = isInstance && "paymentMethodId" in value;
    isInstance = isInstance && "connectorServiceTokenId" in value;
    isInstance = isInstance && "token" in value;
    isInstance = isInstance && "connectorId" in value;
    isInstance = isInstance && "connector" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;
    return isInstance;
}
function ConnectorServiceTokenEntityFromJSON(json) {
    return ConnectorServiceTokenEntityFromJSONTyped(json, false);
}
function ConnectorServiceTokenEntityFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    const typed = {
        'paymentMethodId': json['paymentMethodId'],
        'connectorServiceTokenId': json['connectorServiceTokenId'],
        'token': json['token'],
        'connectorId': json['connectorId'],
        'connector': json['connector'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'approvalUrl': !(0, runtime_1.exists)(json, 'approvalUrl') ? undefined : json['approvalUrl'],
    };
    return (0, runtime_1.removeNullUndefined)(typed);
}
function ConnectorServiceTokenEntityToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'paymentMethodId': value.paymentMethodId,
        'connectorServiceTokenId': value.connectorServiceTokenId,
        'token': value.token,
        'connectorId': value.connectorId,
        'connector': value.connector,
        'createdAt': (value.createdAt.toISOString()),
        'updatedAt': (value.updatedAt.toISOString()),
        'approvalUrl': value.approvalUrl,
    };
}
