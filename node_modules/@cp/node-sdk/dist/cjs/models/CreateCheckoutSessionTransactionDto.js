"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfCreateCheckoutSessionTransactionDto = instanceOfCreateCheckoutSessionTransactionDto;
exports.CreateCheckoutSessionTransactionDtoFromJSON = CreateCheckoutSessionTransactionDtoFromJSON;
exports.CreateCheckoutSessionTransactionDtoFromJSONTyped = CreateCheckoutSessionTransactionDtoFromJSONTyped;
exports.CreateCheckoutSessionTransactionDtoToJSON = CreateCheckoutSessionTransactionDtoToJSON;
const runtime_1 = require("../runtime");
const BillingAddressDto_1 = require("./BillingAddressDto");
const CreateCheckoutSessionPaymentMethodDto_1 = require("./CreateCheckoutSessionPaymentMethodDto");
/**
 * Check if a given object implements the CreateCheckoutSessionTransactionDto interface.
 */
function instanceOfCreateCheckoutSessionTransactionDto(value) {
    let isInstance = true;
    isInstance = isInstance && "sessionId" in value;
    isInstance = isInstance && "givenName" in value;
    isInstance = isInstance && "familyName" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "billingAddress" in value;
    isInstance = isInstance && "paymentMethod" in value;
    return isInstance;
}
function CreateCheckoutSessionTransactionDtoFromJSON(json) {
    return CreateCheckoutSessionTransactionDtoFromJSONTyped(json, false);
}
function CreateCheckoutSessionTransactionDtoFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    const typed = {
        'sessionId': json['sessionId'],
        'givenName': json['givenName'],
        'familyName': json['familyName'],
        'email': json['email'],
        'billingAddress': (0, BillingAddressDto_1.BillingAddressDtoFromJSON)(json['billingAddress']),
        'paymentMethod': (0, CreateCheckoutSessionPaymentMethodDto_1.CreateCheckoutSessionPaymentMethodDtoFromJSON)(json['paymentMethod']),
    };
    return (0, runtime_1.removeNullUndefined)(typed);
}
function CreateCheckoutSessionTransactionDtoToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'sessionId': value.sessionId,
        'givenName': value.givenName,
        'familyName': value.familyName,
        'email': value.email,
        'billingAddress': (0, BillingAddressDto_1.BillingAddressDtoToJSON)(value.billingAddress),
        'paymentMethod': (0, CreateCheckoutSessionPaymentMethodDto_1.CreateCheckoutSessionPaymentMethodDtoToJSON)(value.paymentMethod),
    };
}
