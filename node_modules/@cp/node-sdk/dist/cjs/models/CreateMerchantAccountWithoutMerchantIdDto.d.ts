/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
import type { CreateCFeeDto } from './CreateCFeeDto';
import type { CreateMerchantConnectorWithoutMerchantAccountIdDto } from './CreateMerchantConnectorWithoutMerchantAccountIdDto';
/**
 *
 * @export
 * @interface CreateMerchantAccountWithoutMerchantIdDto
 */
export interface CreateMerchantAccountWithoutMerchantIdDto {
    /**
     * The issued MID (Merchant ID)
     * @type {string}
     * @memberof CreateMerchantAccountWithoutMerchantIdDto
     */
    issuedMid: string;
    /**
     * The payment method
     * @type {string}
     * @memberof CreateMerchantAccountWithoutMerchantIdDto
     */
    method: CreateMerchantAccountWithoutMerchantIdDtoMethodEnum;
    /**
     * The payment service provider
     * @type {string}
     * @memberof CreateMerchantAccountWithoutMerchantIdDto
     */
    psp: CreateMerchantAccountWithoutMerchantIdDtoPspEnum;
    /**
     * The CFee details
     * @type {CreateCFeeDto}
     * @memberof CreateMerchantAccountWithoutMerchantIdDto
     */
    cFee: CreateCFeeDto;
    /**
     * The accepted card types
     * @type {Array<string>}
     * @memberof CreateMerchantAccountWithoutMerchantIdDto
     */
    cardTypes?: Array<CreateMerchantAccountWithoutMerchantIdDtoCardTypesEnum>;
    /**
     * The accepted card schemes
     * @type {Array<string>}
     * @memberof CreateMerchantAccountWithoutMerchantIdDto
     */
    cardSchemes?: Array<CreateMerchantAccountWithoutMerchantIdDtoCardSchemesEnum>;
    /**
     * The accepted currencies
     * @type {Array<string>}
     * @memberof CreateMerchantAccountWithoutMerchantIdDto
     */
    currencies?: Array<CreateMerchantAccountWithoutMerchantIdDtoCurrenciesEnum>;
    /**
     * The list of merchant connectors
     * @type {Array<CreateMerchantConnectorWithoutMerchantAccountIdDto>}
     * @memberof CreateMerchantAccountWithoutMerchantIdDto
     */
    connectors: Array<CreateMerchantConnectorWithoutMerchantAccountIdDto>;
    /**
     * The MCC (Merchant Category Code)
     * @type {string}
     * @memberof CreateMerchantAccountWithoutMerchantIdDto
     */
    mcc?: string;
    /**
     * The BIN (Bank Identification Number)
     * @type {string}
     * @memberof CreateMerchantAccountWithoutMerchantIdDto
     */
    bin?: string;
    /**
     * The chain or franchise information associated with the merchant
     * @type {string}
     * @memberof CreateMerchantAccountWithoutMerchantIdDto
     */
    chain?: string;
    /**
     * The store information associated with the merchant
     * @type {string}
     * @memberof CreateMerchantAccountWithoutMerchantIdDto
     */
    store?: string;
    /**
     * The agent information associated with the merchant
     * @type {string}
     * @memberof CreateMerchantAccountWithoutMerchantIdDto
     */
    agent?: string;
    /**
     * The default merchant account
     * @type {boolean}
     * @memberof CreateMerchantAccountWithoutMerchantIdDto
     */
    isDefault?: boolean;
}
/**
 * @export
 */
export declare const CreateMerchantAccountWithoutMerchantIdDtoMethodEnum: {
    readonly Card: "CARD";
    readonly Ach: "ACH";
};
export type CreateMerchantAccountWithoutMerchantIdDtoMethodEnum = typeof CreateMerchantAccountWithoutMerchantIdDtoMethodEnum[keyof typeof CreateMerchantAccountWithoutMerchantIdDtoMethodEnum];
/**
 * @export
 */
export declare const CreateMerchantAccountWithoutMerchantIdDtoPspEnum: {
    readonly Tsys: "TSYS";
    readonly Nashville: "NASHVILLE";
    readonly North: "NORTH";
    readonly ChannelPayments: "CHANNEL_PAYMENTS";
};
export type CreateMerchantAccountWithoutMerchantIdDtoPspEnum = typeof CreateMerchantAccountWithoutMerchantIdDtoPspEnum[keyof typeof CreateMerchantAccountWithoutMerchantIdDtoPspEnum];
/**
 * @export
 */
export declare const CreateMerchantAccountWithoutMerchantIdDtoCardTypesEnum: {
    readonly Credit: "CREDIT";
    readonly Debit: "DEBIT";
    readonly Prepaid: "PREPAID";
};
export type CreateMerchantAccountWithoutMerchantIdDtoCardTypesEnum = typeof CreateMerchantAccountWithoutMerchantIdDtoCardTypesEnum[keyof typeof CreateMerchantAccountWithoutMerchantIdDtoCardTypesEnum];
/**
 * @export
 */
export declare const CreateMerchantAccountWithoutMerchantIdDtoCardSchemesEnum: {
    readonly Visa: "VISA";
    readonly Mastercard: "MASTERCARD";
    readonly Amex: "AMEX";
    readonly Discover: "DISCOVER";
    readonly Jcb: "JCB";
    readonly DinersClub: "DINERS_CLUB";
    readonly Maestro: "MAESTRO";
};
export type CreateMerchantAccountWithoutMerchantIdDtoCardSchemesEnum = typeof CreateMerchantAccountWithoutMerchantIdDtoCardSchemesEnum[keyof typeof CreateMerchantAccountWithoutMerchantIdDtoCardSchemesEnum];
/**
 * @export
 */
export declare const CreateMerchantAccountWithoutMerchantIdDtoCurrenciesEnum: {
    readonly Usd: "USD";
    readonly Aud: "AUD";
    readonly Cad: "CAD";
};
export type CreateMerchantAccountWithoutMerchantIdDtoCurrenciesEnum = typeof CreateMerchantAccountWithoutMerchantIdDtoCurrenciesEnum[keyof typeof CreateMerchantAccountWithoutMerchantIdDtoCurrenciesEnum];
/**
 * Check if a given object implements the CreateMerchantAccountWithoutMerchantIdDto interface.
 */
export declare function instanceOfCreateMerchantAccountWithoutMerchantIdDto(value: object): boolean;
export declare function CreateMerchantAccountWithoutMerchantIdDtoFromJSON(json: any): CreateMerchantAccountWithoutMerchantIdDto;
export declare function CreateMerchantAccountWithoutMerchantIdDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateMerchantAccountWithoutMerchantIdDto;
export declare function CreateMerchantAccountWithoutMerchantIdDtoToJSON(value?: CreateMerchantAccountWithoutMerchantIdDto | null): any;
