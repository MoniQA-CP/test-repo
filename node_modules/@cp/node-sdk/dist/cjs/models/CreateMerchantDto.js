"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfCreateMerchantDto = instanceOfCreateMerchantDto;
exports.CreateMerchantDtoFromJSON = CreateMerchantDtoFromJSON;
exports.CreateMerchantDtoFromJSONTyped = CreateMerchantDtoFromJSONTyped;
exports.CreateMerchantDtoToJSON = CreateMerchantDtoToJSON;
const runtime_1 = require("../runtime");
const CreateMerchantAccountWithoutMerchantIdDto_1 = require("./CreateMerchantAccountWithoutMerchantIdDto");
const CreateMerchantAddressDto_1 = require("./CreateMerchantAddressDto");
const MerchantSettingsBaseDto_1 = require("./MerchantSettingsBaseDto");
/**
 * Check if a given object implements the CreateMerchantDto interface.
 */
function instanceOfCreateMerchantDto(value) {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "phoneNumber" in value;
    isInstance = isInstance && "address" in value;
    return isInstance;
}
function CreateMerchantDtoFromJSON(json) {
    return CreateMerchantDtoFromJSONTyped(json, false);
}
function CreateMerchantDtoFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    const typed = {
        'name': json['name'],
        'email': json['email'],
        'phoneNumber': json['phoneNumber'],
        'address': (0, CreateMerchantAddressDto_1.CreateMerchantAddressDtoFromJSON)(json['address']),
        'website': !(0, runtime_1.exists)(json, 'website') ? undefined : json['website'],
        'parentMerchantId': !(0, runtime_1.exists)(json, 'parentMerchantId') ? undefined : json['parentMerchantId'],
        'merchantAccounts': !(0, runtime_1.exists)(json, 'merchantAccounts') ? undefined : (json['merchantAccounts'].map(CreateMerchantAccountWithoutMerchantIdDto_1.CreateMerchantAccountWithoutMerchantIdDtoFromJSON)),
        'merchantSettings': !(0, runtime_1.exists)(json, 'merchantSettings') ? undefined : (0, MerchantSettingsBaseDto_1.MerchantSettingsBaseDtoFromJSON)(json['merchantSettings']),
    };
    return (0, runtime_1.removeNullUndefined)(typed);
}
function CreateMerchantDtoToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': value.name,
        'email': value.email,
        'phoneNumber': value.phoneNumber,
        'address': (0, CreateMerchantAddressDto_1.CreateMerchantAddressDtoToJSON)(value.address),
        'website': value.website,
        'parentMerchantId': value.parentMerchantId,
        'merchantAccounts': value.merchantAccounts === undefined ? undefined : (value.merchantAccounts.map(CreateMerchantAccountWithoutMerchantIdDto_1.CreateMerchantAccountWithoutMerchantIdDtoToJSON)),
        'merchantSettings': (0, MerchantSettingsBaseDto_1.MerchantSettingsBaseDtoToJSON)(value.merchantSettings),
    };
}
