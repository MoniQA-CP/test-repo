"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateProvisionedCardTokenDtoConnectorEnum = void 0;
exports.instanceOfCreateProvisionedCardTokenDto = instanceOfCreateProvisionedCardTokenDto;
exports.CreateProvisionedCardTokenDtoFromJSON = CreateProvisionedCardTokenDtoFromJSON;
exports.CreateProvisionedCardTokenDtoFromJSONTyped = CreateProvisionedCardTokenDtoFromJSONTyped;
exports.CreateProvisionedCardTokenDtoToJSON = CreateProvisionedCardTokenDtoToJSON;
const runtime_1 = require("../runtime");
/**
 * @export
 */
exports.CreateProvisionedCardTokenDtoConnectorEnum = {
    Epay: 'EPAY'
};
/**
 * Check if a given object implements the CreateProvisionedCardTokenDto interface.
 */
function instanceOfCreateProvisionedCardTokenDto(value) {
    let isInstance = true;
    isInstance = isInstance && "paymentMethodId" in value;
    isInstance = isInstance && "connector" in value;
    return isInstance;
}
function CreateProvisionedCardTokenDtoFromJSON(json) {
    return CreateProvisionedCardTokenDtoFromJSONTyped(json, false);
}
function CreateProvisionedCardTokenDtoFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    const typed = {
        'paymentMethodId': json['paymentMethodId'],
        'securityCode': !(0, runtime_1.exists)(json, 'securityCode') ? undefined : json['securityCode'],
        'connector': json['connector'],
        'redirectUrl': !(0, runtime_1.exists)(json, 'redirectUrl') ? undefined : json['redirectUrl'],
    };
    return (0, runtime_1.removeNullUndefined)(typed);
}
function CreateProvisionedCardTokenDtoToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'paymentMethodId': value.paymentMethodId,
        'securityCode': value.securityCode,
        'connector': value.connector,
        'redirectUrl': value.redirectUrl,
    };
}
