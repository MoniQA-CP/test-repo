/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
import type { BillingDetailsDto } from './BillingDetailsDto';
/**
 *
 * @export
 * @interface CreateServicePaymentMethodDto
 */
export interface CreateServicePaymentMethodDto {
    /**
     * The payment method
     * @type {string}
     * @memberof CreateServicePaymentMethodDto
     */
    method: CreateServicePaymentMethodDtoMethodEnum;
    /**
     * The 13 - 19 digit card number. Must be unset if method is not CARD.
     * @type {string}
     * @memberof CreateServicePaymentMethodDto
     */
    number?: string;
    /**
     * The expiration date of the card, formatted MM/YY, Must be unset if method is not CARD.
     * @type {string}
     * @memberof CreateServicePaymentMethodDto
     */
    expirationDate?: string;
    /**
     * The routing number of the bank account. Must be unset if method is not BANK_ACCOUNT.
     * @type {string}
     * @memberof CreateServicePaymentMethodDto
     */
    abaNumber?: string;
    /**
     * The account number of the bank account. Must be unset if method is not BANK_ACCOUNT.
     * @type {string}
     * @memberof CreateServicePaymentMethodDto
     */
    accountNumber?: string;
    /**
     * The account type of the bank account. Must be unset if method is not BANK_ACCOUNT.
     * @type {string}
     * @memberof CreateServicePaymentMethodDto
     */
    accountType?: CreateServicePaymentMethodDtoAccountTypeEnum;
    /**
     * The name of the account holder of the bank account. Must be unset if method is not BANK_ACCOUNT.
     * @type {string}
     * @memberof CreateServicePaymentMethodDto
     */
    accountHolderName?: string;
    /**
     * The external ID of the buyer to associate the payment to
     * @type {string}
     * @memberof CreateServicePaymentMethodDto
     */
    externalBuyerId?: string;
    /**
     * The Channel Payments ID of the buyer to associate the payment to
     * @type {string}
     * @memberof CreateServicePaymentMethodDto
     */
    buyerId?: string;
    /**
     * An external ID to match the card against your own records
     * @type {string}
     * @memberof CreateServicePaymentMethodDto
     */
    externalPaymentMethodId?: string;
    /**
     * The billing details of the account holder.
     * @type {BillingDetailsDto}
     * @memberof CreateServicePaymentMethodDto
     */
    billingDetails?: BillingDetailsDto;
    /**
     * If the customer initiated the payment method creation or not.
     * @type {boolean}
     * @memberof CreateServicePaymentMethodDto
     */
    isCustomerStored?: boolean;
    /**
     * The ID of the merchant associated with this payment method.
     * @type {string}
     * @memberof CreateServicePaymentMethodDto
     */
    merchantId?: string;
}
/**
 * @export
 */
export declare const CreateServicePaymentMethodDtoMethodEnum: {
    readonly Card: "CARD";
    readonly Bank: "BANK";
};
export type CreateServicePaymentMethodDtoMethodEnum = typeof CreateServicePaymentMethodDtoMethodEnum[keyof typeof CreateServicePaymentMethodDtoMethodEnum];
/**
 * @export
 */
export declare const CreateServicePaymentMethodDtoAccountTypeEnum: {
    readonly Checking: "CHECKING";
    readonly Savings: "SAVINGS";
};
export type CreateServicePaymentMethodDtoAccountTypeEnum = typeof CreateServicePaymentMethodDtoAccountTypeEnum[keyof typeof CreateServicePaymentMethodDtoAccountTypeEnum];
/**
 * Check if a given object implements the CreateServicePaymentMethodDto interface.
 */
export declare function instanceOfCreateServicePaymentMethodDto(value: object): boolean;
export declare function CreateServicePaymentMethodDtoFromJSON(json: any): CreateServicePaymentMethodDto;
export declare function CreateServicePaymentMethodDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateServicePaymentMethodDto;
export declare function CreateServicePaymentMethodDtoToJSON(value?: CreateServicePaymentMethodDto | null): any;
