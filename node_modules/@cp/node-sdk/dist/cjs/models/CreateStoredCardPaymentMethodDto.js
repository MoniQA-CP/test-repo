"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfCreateStoredCardPaymentMethodDto = instanceOfCreateStoredCardPaymentMethodDto;
exports.CreateStoredCardPaymentMethodDtoFromJSON = CreateStoredCardPaymentMethodDtoFromJSON;
exports.CreateStoredCardPaymentMethodDtoFromJSONTyped = CreateStoredCardPaymentMethodDtoFromJSONTyped;
exports.CreateStoredCardPaymentMethodDtoToJSON = CreateStoredCardPaymentMethodDtoToJSON;
const runtime_1 = require("../runtime");
const BillingDetailsDto_1 = require("./BillingDetailsDto");
/**
 * Check if a given object implements the CreateStoredCardPaymentMethodDto interface.
 */
function instanceOfCreateStoredCardPaymentMethodDto(value) {
    let isInstance = true;
    isInstance = isInstance && "paymentMethodIntegrationId" in value;
    isInstance = isInstance && "integrationId" in value;
    isInstance = isInstance && "merchantId" in value;
    return isInstance;
}
function CreateStoredCardPaymentMethodDtoFromJSON(json) {
    return CreateStoredCardPaymentMethodDtoFromJSONTyped(json, false);
}
function CreateStoredCardPaymentMethodDtoFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    const typed = {
        'paymentMethodIntegrationId': json['paymentMethodIntegrationId'],
        'integrationId': json['integrationId'],
        'merchantId': json['merchantId'],
        'buyerId': !(0, runtime_1.exists)(json, 'buyerId') ? undefined : json['buyerId'],
        'externalBuyerId': !(0, runtime_1.exists)(json, 'externalBuyerId') ? undefined : json['externalBuyerId'],
        'accountHolderName': !(0, runtime_1.exists)(json, 'accountHolderName') ? undefined : json['accountHolderName'],
        'billingDetails': !(0, runtime_1.exists)(json, 'billingDetails') ? undefined : (0, BillingDetailsDto_1.BillingDetailsDtoFromJSON)(json['billingDetails']),
        'isCustomerStored': !(0, runtime_1.exists)(json, 'isCustomerStored') ? undefined : json['isCustomerStored'],
    };
    return (0, runtime_1.removeNullUndefined)(typed);
}
function CreateStoredCardPaymentMethodDtoToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'paymentMethodIntegrationId': value.paymentMethodIntegrationId,
        'integrationId': value.integrationId,
        'merchantId': value.merchantId,
        'buyerId': value.buyerId,
        'externalBuyerId': value.externalBuyerId,
        'accountHolderName': value.accountHolderName,
        'billingDetails': (0, BillingDetailsDto_1.BillingDetailsDtoToJSON)(value.billingDetails),
        'isCustomerStored': value.isCustomerStored,
    };
}
