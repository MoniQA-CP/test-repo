/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
import type { PaymentMethodDto } from './PaymentMethodDto';
import type { TagDto } from './TagDto';
/**
 *
 * @export
 * @interface CreateTransactionRequestDto
 */
export interface CreateTransactionRequestDto {
    /**
     * The amount to charge the buyer.
     * @type {number}
     * @memberof CreateTransactionRequestDto
     */
    amount: number;
    /**
     * The ISO-4217 currency code of the amount to charge the buyer.
     * @type {string}
     * @memberof CreateTransactionRequestDto
     */
    currency: CreateTransactionRequestDtoCurrencyEnum;
    /**
     * The payment method.
     * @type {PaymentMethodDto}
     * @memberof CreateTransactionRequestDto
     */
    paymentMethod: PaymentMethodDto;
    /**
     * Defines the intent of the transaction. Available options include: authorize, capture, debit and credit
     * @type {string}
     * @memberof CreateTransactionRequestDto
     */
    intent: CreateTransactionRequestDtoIntentEnum;
    /**
     * Exclude the convenience fee from the transaction amount. The convenience fee, if applicable, will be included by default if not specified.
     * @type {boolean}
     * @memberof CreateTransactionRequestDto
     */
    excludeCFee?: boolean;
    /**
     * The 2-letter ISO code of the country of the transaction.
     * @type {string}
     * @memberof CreateTransactionRequestDto
     */
    country?: string;
    /**
     * External identifier that can be used to match the transactions against your own records
     * @type {string}
     * @memberof CreateTransactionRequestDto
     */
    externalTransactionId?: string;
    /**
     * The SEC code of the ACH transaction. Must be unset if method is not BANK.
     * @type {string}
     * @memberof CreateTransactionRequestDto
     */
    secCode?: CreateTransactionRequestDtoSecCodeEnum;
    /**
     * The descriptive labels or keywords that are assigned to the transaction.
     * @type {Array<TagDto>}
     * @memberof CreateTransactionRequestDto
     */
    tags?: Array<TagDto>;
}
/**
 * @export
 */
export declare const CreateTransactionRequestDtoCurrencyEnum: {
    readonly Usd: "USD";
    readonly Cad: "CAD";
    readonly Aud: "AUD";
};
export type CreateTransactionRequestDtoCurrencyEnum = typeof CreateTransactionRequestDtoCurrencyEnum[keyof typeof CreateTransactionRequestDtoCurrencyEnum];
/**
 * @export
 */
export declare const CreateTransactionRequestDtoIntentEnum: {
    readonly Authorize: "authorize";
    readonly Capture: "capture";
    readonly Debit: "debit";
};
export type CreateTransactionRequestDtoIntentEnum = typeof CreateTransactionRequestDtoIntentEnum[keyof typeof CreateTransactionRequestDtoIntentEnum];
/**
 * @export
 */
export declare const CreateTransactionRequestDtoSecCodeEnum: {
    readonly Ppd: "PPD";
    readonly Ccd: "CCD";
    readonly Web: "WEB";
    readonly Tel: "TEL";
};
export type CreateTransactionRequestDtoSecCodeEnum = typeof CreateTransactionRequestDtoSecCodeEnum[keyof typeof CreateTransactionRequestDtoSecCodeEnum];
/**
 * Check if a given object implements the CreateTransactionRequestDto interface.
 */
export declare function instanceOfCreateTransactionRequestDto(value: object): boolean;
export declare function CreateTransactionRequestDtoFromJSON(json: any): CreateTransactionRequestDto;
export declare function CreateTransactionRequestDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTransactionRequestDto;
export declare function CreateTransactionRequestDtoToJSON(value?: CreateTransactionRequestDto | null): any;
