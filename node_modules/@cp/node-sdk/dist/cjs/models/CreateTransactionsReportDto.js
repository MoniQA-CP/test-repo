"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateTransactionsReportDtoOrderEnum = exports.CreateTransactionsReportDtoDateRangeEnum = void 0;
exports.instanceOfCreateTransactionsReportDto = instanceOfCreateTransactionsReportDto;
exports.CreateTransactionsReportDtoFromJSON = CreateTransactionsReportDtoFromJSON;
exports.CreateTransactionsReportDtoFromJSONTyped = CreateTransactionsReportDtoFromJSONTyped;
exports.CreateTransactionsReportDtoToJSON = CreateTransactionsReportDtoToJSON;
const runtime_1 = require("../runtime");
const CreateTransactionsReportsFiltersDto_1 = require("./CreateTransactionsReportsFiltersDto");
/**
 * @export
 */
exports.CreateTransactionsReportDtoDateRangeEnum = {
    Today: 'TODAY',
    Yesterday: 'YESTERDAY',
    Last7Days: 'LAST_7_DAYS',
    Last30Days: 'LAST_30_DAYS',
    Last60Days: 'LAST_60_DAYS',
    Last90Days: 'LAST_90_DAYS',
    LastWeek: 'LAST_WEEK',
    LastMonth: 'LAST_MONTH',
    LastQuarter: 'LAST_QUARTER',
    LastYear: 'LAST_YEAR',
    Custom: 'CUSTOM'
};
/**
 * @export
 */
exports.CreateTransactionsReportDtoOrderEnum = {
    Asc: 'asc',
    Desc: 'desc'
};
/**
 * Check if a given object implements the CreateTransactionsReportDto interface.
 */
function instanceOfCreateTransactionsReportDto(value) {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "startDate" in value;
    isInstance = isInstance && "endDate" in value;
    isInstance = isInstance && "dateRange" in value;
    isInstance = isInstance && "startTime" in value;
    isInstance = isInstance && "endTime" in value;
    isInstance = isInstance && "recipients" in value;
    isInstance = isInstance && "columns" in value;
    isInstance = isInstance && "transactionsFilters" in value;
    return isInstance;
}
function CreateTransactionsReportDtoFromJSON(json) {
    return CreateTransactionsReportDtoFromJSONTyped(json, false);
}
function CreateTransactionsReportDtoFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    const typed = {
        'name': json['name'],
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : json['description'],
        'startDate': json['startDate'],
        'endDate': json['endDate'],
        'dateRange': json['dateRange'],
        'startTime': json['startTime'],
        'endTime': json['endTime'],
        'recipients': json['recipients'],
        'order': !(0, runtime_1.exists)(json, 'order') ? undefined : json['order'],
        'columns': json['columns'],
        'transactionsFilters': (0, CreateTransactionsReportsFiltersDto_1.CreateTransactionsReportsFiltersDtoFromJSON)(json['transactionsFilters']),
    };
    return (0, runtime_1.removeNullUndefined)(typed);
}
function CreateTransactionsReportDtoToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': value.name,
        'description': value.description,
        'startDate': value.startDate,
        'endDate': value.endDate,
        'dateRange': value.dateRange,
        'startTime': value.startTime,
        'endTime': value.endTime,
        'recipients': value.recipients,
        'order': value.order,
        'columns': value.columns,
        'transactionsFilters': (0, CreateTransactionsReportsFiltersDto_1.CreateTransactionsReportsFiltersDtoToJSON)(value.transactionsFilters),
    };
}
