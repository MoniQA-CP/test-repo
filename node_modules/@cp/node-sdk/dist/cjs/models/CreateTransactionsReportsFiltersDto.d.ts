/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
/**
 *
 * @export
 * @interface CreateTransactionsReportsFiltersDto
 */
export interface CreateTransactionsReportsFiltersDto {
    /**
     * The payment method used to filter this report.
     * @type {Array<string>}
     * @memberof CreateTransactionsReportsFiltersDto
     */
    paymentMethods: Array<CreateTransactionsReportsFiltersDtoPaymentMethodsEnum>;
    /**
     * The account types used to filter this report. Applicable for BANK/ACH transactions.
     * @type {Array<string>}
     * @memberof CreateTransactionsReportsFiltersDto
     */
    accountTypes?: Array<CreateTransactionsReportsFiltersDtoAccountTypesEnum>;
    /**
     * The card types used to filter this report. Applicable for CARD transactions.
     * @type {Array<string>}
     * @memberof CreateTransactionsReportsFiltersDto
     */
    cardTypes?: Array<CreateTransactionsReportsFiltersDtoCardTypesEnum>;
    /**
     * The card schemes used to filter this report. Applicable for CARD transactions.
     * @type {Array<string>}
     * @memberof CreateTransactionsReportsFiltersDto
     */
    cardSchemes?: Array<CreateTransactionsReportsFiltersDtoCardSchemesEnum>;
    /**
     * The transaction intents used to filter this report.
     * @type {Array<string>}
     * @memberof CreateTransactionsReportsFiltersDto
     */
    transactionIntents?: Array<CreateTransactionsReportsFiltersDtoTransactionIntentsEnum>;
    /**
     * The transaction statuses used to filter this report.
     * @type {Array<string>}
     * @memberof CreateTransactionsReportsFiltersDto
     */
    transactionStatuses?: Array<CreateTransactionsReportsFiltersDtoTransactionStatusesEnum>;
    /**
     * The amount of the transaction for this report.
     * @type {number}
     * @memberof CreateTransactionsReportsFiltersDto
     */
    amount?: number;
    /**
     * Amount greater than a specified threshold for this report.
     * @type {number}
     * @memberof CreateTransactionsReportsFiltersDto
     */
    amountGreaterThan?: number;
    /**
     * Amount less than a specified threshold for this report.
     * @type {number}
     * @memberof CreateTransactionsReportsFiltersDto
     */
    amountLessThan?: number;
    /**
     * The min amount for a specified range in this report.
     * @type {number}
     * @memberof CreateTransactionsReportsFiltersDto
     */
    amountMin?: number;
    /**
     * The max amount for a specified range in this report.
     * @type {number}
     * @memberof CreateTransactionsReportsFiltersDto
     */
    amountMax?: number;
}
/**
 * @export
 */
export declare const CreateTransactionsReportsFiltersDtoPaymentMethodsEnum: {
    readonly Card: "CARD";
    readonly Bank: "BANK";
};
export type CreateTransactionsReportsFiltersDtoPaymentMethodsEnum = typeof CreateTransactionsReportsFiltersDtoPaymentMethodsEnum[keyof typeof CreateTransactionsReportsFiltersDtoPaymentMethodsEnum];
/**
 * @export
 */
export declare const CreateTransactionsReportsFiltersDtoAccountTypesEnum: {
    readonly Checking: "CHECKING";
    readonly Savings: "SAVINGS";
};
export type CreateTransactionsReportsFiltersDtoAccountTypesEnum = typeof CreateTransactionsReportsFiltersDtoAccountTypesEnum[keyof typeof CreateTransactionsReportsFiltersDtoAccountTypesEnum];
/**
 * @export
 */
export declare const CreateTransactionsReportsFiltersDtoCardTypesEnum: {
    readonly Credit: "CREDIT";
    readonly Debit: "DEBIT";
    readonly Prepaid: "PREPAID";
};
export type CreateTransactionsReportsFiltersDtoCardTypesEnum = typeof CreateTransactionsReportsFiltersDtoCardTypesEnum[keyof typeof CreateTransactionsReportsFiltersDtoCardTypesEnum];
/**
 * @export
 */
export declare const CreateTransactionsReportsFiltersDtoCardSchemesEnum: {
    readonly Visa: "visa";
    readonly Mastercard: "mastercard";
    readonly Amex: "amex";
    readonly Discover: "discover";
    readonly Jcb: "jcb";
    readonly DinersClub: "diners_club";
    readonly Maestro: "maestro";
};
export type CreateTransactionsReportsFiltersDtoCardSchemesEnum = typeof CreateTransactionsReportsFiltersDtoCardSchemesEnum[keyof typeof CreateTransactionsReportsFiltersDtoCardSchemesEnum];
/**
 * @export
 */
export declare const CreateTransactionsReportsFiltersDtoTransactionIntentsEnum: {
    readonly Capture: "capture";
    readonly Authorize: "authorize";
    readonly Debit: "debit";
    readonly Credit: "credit";
};
export type CreateTransactionsReportsFiltersDtoTransactionIntentsEnum = typeof CreateTransactionsReportsFiltersDtoTransactionIntentsEnum[keyof typeof CreateTransactionsReportsFiltersDtoTransactionIntentsEnum];
/**
 * @export
 */
export declare const CreateTransactionsReportsFiltersDtoTransactionStatusesEnum: {
    readonly Authorized: "authorized";
    readonly AuthorizationFailed: "authorizationFailed";
    readonly Declined: "declined";
    readonly Captured: "captured";
    readonly Voided: "voided";
    readonly Hold: "hold";
    readonly Submitted: "submitted";
    readonly Transmitted: "transmitted";
    readonly Settled: "settled";
    readonly Returned: "returned";
    readonly Rejected: "rejected";
};
export type CreateTransactionsReportsFiltersDtoTransactionStatusesEnum = typeof CreateTransactionsReportsFiltersDtoTransactionStatusesEnum[keyof typeof CreateTransactionsReportsFiltersDtoTransactionStatusesEnum];
/**
 * Check if a given object implements the CreateTransactionsReportsFiltersDto interface.
 */
export declare function instanceOfCreateTransactionsReportsFiltersDto(value: object): boolean;
export declare function CreateTransactionsReportsFiltersDtoFromJSON(json: any): CreateTransactionsReportsFiltersDto;
export declare function CreateTransactionsReportsFiltersDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTransactionsReportsFiltersDto;
export declare function CreateTransactionsReportsFiltersDtoToJSON(value?: CreateTransactionsReportsFiltersDto | null): any;
