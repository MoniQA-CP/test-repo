"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfMerchantServiceEntity = instanceOfMerchantServiceEntity;
exports.MerchantServiceEntityFromJSON = MerchantServiceEntityFromJSON;
exports.MerchantServiceEntityFromJSONTyped = MerchantServiceEntityFromJSONTyped;
exports.MerchantServiceEntityToJSON = MerchantServiceEntityToJSON;
const runtime_1 = require("../runtime");
const MerchantAccountServiceEntity_1 = require("./MerchantAccountServiceEntity");
const MerchantAddressEntity_1 = require("./MerchantAddressEntity");
const MerchantSettingsEntity_1 = require("./MerchantSettingsEntity");
/**
 * Check if a given object implements the MerchantServiceEntity interface.
 */
function instanceOfMerchantServiceEntity(value) {
    let isInstance = true;
    isInstance = isInstance && "merchantId" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "address" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "phoneNumber" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "integrationId" in value;
    return isInstance;
}
function MerchantServiceEntityFromJSON(json) {
    return MerchantServiceEntityFromJSONTyped(json, false);
}
function MerchantServiceEntityFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    const typed = {
        'merchantId': json['merchantId'],
        'name': json['name'],
        'address': (0, MerchantAddressEntity_1.MerchantAddressEntityFromJSON)(json['address']),
        'email': json['email'],
        'phoneNumber': json['phoneNumber'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'integrationId': json['integrationId'],
        'logo': !(0, runtime_1.exists)(json, 'logo') ? undefined : json['logo'],
        'parentMerchantId': !(0, runtime_1.exists)(json, 'parentMerchantId') ? undefined : json['parentMerchantId'],
        'website': !(0, runtime_1.exists)(json, 'website') ? undefined : json['website'],
        'merchantAccounts': !(0, runtime_1.exists)(json, 'merchantAccounts') ? undefined : (json['merchantAccounts'].map(MerchantAccountServiceEntity_1.MerchantAccountServiceEntityFromJSON)),
        'cancelRedirectUrl': !(0, runtime_1.exists)(json, 'cancelRedirectUrl') ? undefined : json['cancelRedirectUrl'],
        'successRedirectUrl': !(0, runtime_1.exists)(json, 'successRedirectUrl') ? undefined : json['successRedirectUrl'],
        'merchantSettings': !(0, runtime_1.exists)(json, 'merchantSettings') ? undefined : (0, MerchantSettingsEntity_1.MerchantSettingsEntityFromJSON)(json['merchantSettings']),
    };
    return (0, runtime_1.removeNullUndefined)(typed);
}
function MerchantServiceEntityToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'merchantId': value.merchantId,
        'name': value.name,
        'address': (0, MerchantAddressEntity_1.MerchantAddressEntityToJSON)(value.address),
        'email': value.email,
        'phoneNumber': value.phoneNumber,
        'createdAt': (value.createdAt.toISOString()),
        'updatedAt': (value.updatedAt.toISOString()),
        'integrationId': value.integrationId,
        'logo': value.logo,
        'parentMerchantId': value.parentMerchantId,
        'website': value.website,
        'merchantAccounts': value.merchantAccounts === undefined ? undefined : (value.merchantAccounts.map(MerchantAccountServiceEntity_1.MerchantAccountServiceEntityToJSON)),
        'cancelRedirectUrl': value.cancelRedirectUrl,
        'successRedirectUrl': value.successRedirectUrl,
        'merchantSettings': (0, MerchantSettingsEntity_1.MerchantSettingsEntityToJSON)(value.merchantSettings),
    };
}
