/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
/**
 *
 * @export
 * @interface TransactionPaymentInstrumentBaseEntity
 */
export interface TransactionPaymentInstrumentBaseEntity {
    /**
     * The unique identifier of the payment method.
     * @type {string}
     * @memberof TransactionPaymentInstrumentBaseEntity
     */
    paymentMethodId: string;
    /**
     * The method for the payment method.
     * @type {string}
     * @memberof TransactionPaymentInstrumentBaseEntity
     */
    method: TransactionPaymentInstrumentBaseEntityMethodEnum;
    /**
     * The unique identifier of the external payment method.
     * @type {string}
     * @memberof TransactionPaymentInstrumentBaseEntity
     */
    externalPaymentMethodId?: string;
    /**
     * The label of the payment method.
     * @type {string}
     * @memberof TransactionPaymentInstrumentBaseEntity
     */
    label?: string;
    /**
     * The scheme of the payment method.
     * @type {string}
     * @memberof TransactionPaymentInstrumentBaseEntity
     */
    scheme?: string;
    /**
     * The expiration date of the payment method.
     * @type {string}
     * @memberof TransactionPaymentInstrumentBaseEntity
     */
    expirationDate?: string;
    /**
     * The currency of the payment method.
     * @type {string}
     * @memberof TransactionPaymentInstrumentBaseEntity
     */
    currency?: string;
    /**
     * The country of the payment method.
     * @type {string}
     * @memberof TransactionPaymentInstrumentBaseEntity
     */
    country?: string;
    /**
     * The bin of the payment method.
     * @type {string}
     * @memberof TransactionPaymentInstrumentBaseEntity
     */
    bin?: string;
    /**
     * The card type of the payment method.
     * @type {string}
     * @memberof TransactionPaymentInstrumentBaseEntity
     */
    cardType?: TransactionPaymentInstrumentBaseEntityCardTypeEnum;
    /**
     * The account holder name of the payment method.
     * @type {string}
     * @memberof TransactionPaymentInstrumentBaseEntity
     */
    accountHolderName?: string;
    /**
     * The account number of the payment method.
     * @type {string}
     * @memberof TransactionPaymentInstrumentBaseEntity
     */
    accountNumber?: string;
    /**
     * The last 4 digits of the bank account.
     * @type {string}
     * @memberof TransactionPaymentInstrumentBaseEntity
     */
    accountEnding?: string;
    /**
     * The account type of the payment method.
     * @type {string}
     * @memberof TransactionPaymentInstrumentBaseEntity
     */
    accountType?: TransactionPaymentInstrumentBaseEntityAccountTypeEnum;
    /**
     * The aba number of the payment method.
     * @type {string}
     * @memberof TransactionPaymentInstrumentBaseEntity
     */
    abaNumber?: string;
}
/**
 * @export
 */
export declare const TransactionPaymentInstrumentBaseEntityMethodEnum: {
    readonly Ach: "ACH";
    readonly Bank: "BANK";
    readonly Card: "CARD";
};
export type TransactionPaymentInstrumentBaseEntityMethodEnum = typeof TransactionPaymentInstrumentBaseEntityMethodEnum[keyof typeof TransactionPaymentInstrumentBaseEntityMethodEnum];
/**
 * @export
 */
export declare const TransactionPaymentInstrumentBaseEntityCardTypeEnum: {
    readonly Credit: "CREDIT";
    readonly Debit: "DEBIT";
    readonly Prepaid: "PREPAID";
};
export type TransactionPaymentInstrumentBaseEntityCardTypeEnum = typeof TransactionPaymentInstrumentBaseEntityCardTypeEnum[keyof typeof TransactionPaymentInstrumentBaseEntityCardTypeEnum];
/**
 * @export
 */
export declare const TransactionPaymentInstrumentBaseEntityAccountTypeEnum: {
    readonly Checking: "CHECKING";
    readonly Savings: "SAVINGS";
};
export type TransactionPaymentInstrumentBaseEntityAccountTypeEnum = typeof TransactionPaymentInstrumentBaseEntityAccountTypeEnum[keyof typeof TransactionPaymentInstrumentBaseEntityAccountTypeEnum];
/**
 * Check if a given object implements the TransactionPaymentInstrumentBaseEntity interface.
 */
export declare function instanceOfTransactionPaymentInstrumentBaseEntity(value: object): boolean;
export declare function TransactionPaymentInstrumentBaseEntityFromJSON(json: any): TransactionPaymentInstrumentBaseEntity;
export declare function TransactionPaymentInstrumentBaseEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionPaymentInstrumentBaseEntity;
export declare function TransactionPaymentInstrumentBaseEntityToJSON(value?: TransactionPaymentInstrumentBaseEntity | null): any;
