"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateMerchantAccountDtoCurrenciesEnum = exports.UpdateMerchantAccountDtoCardSchemesEnum = exports.UpdateMerchantAccountDtoCardTypesEnum = exports.UpdateMerchantAccountDtoPspEnum = void 0;
exports.instanceOfUpdateMerchantAccountDto = instanceOfUpdateMerchantAccountDto;
exports.UpdateMerchantAccountDtoFromJSON = UpdateMerchantAccountDtoFromJSON;
exports.UpdateMerchantAccountDtoFromJSONTyped = UpdateMerchantAccountDtoFromJSONTyped;
exports.UpdateMerchantAccountDtoToJSON = UpdateMerchantAccountDtoToJSON;
const runtime_1 = require("../runtime");
const CreateCFeeDto_1 = require("./CreateCFeeDto");
/**
 * @export
 */
exports.UpdateMerchantAccountDtoPspEnum = {
    Tsys: 'TSYS',
    Nashville: 'NASHVILLE',
    North: 'NORTH',
    ChannelPayments: 'CHANNEL_PAYMENTS'
};
/**
 * @export
 */
exports.UpdateMerchantAccountDtoCardTypesEnum = {
    Credit: 'CREDIT',
    Debit: 'DEBIT',
    Prepaid: 'PREPAID'
};
/**
 * @export
 */
exports.UpdateMerchantAccountDtoCardSchemesEnum = {
    Visa: 'VISA',
    Mastercard: 'MASTERCARD',
    Amex: 'AMEX',
    Discover: 'DISCOVER',
    Jcb: 'JCB',
    DinersClub: 'DINERS_CLUB',
    Maestro: 'MAESTRO'
};
/**
 * @export
 */
exports.UpdateMerchantAccountDtoCurrenciesEnum = {
    Usd: 'USD',
    Aud: 'AUD',
    Cad: 'CAD'
};
/**
 * Check if a given object implements the UpdateMerchantAccountDto interface.
 */
function instanceOfUpdateMerchantAccountDto(value) {
    let isInstance = true;
    return isInstance;
}
function UpdateMerchantAccountDtoFromJSON(json) {
    return UpdateMerchantAccountDtoFromJSONTyped(json, false);
}
function UpdateMerchantAccountDtoFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    const typed = {
        'psp': !(0, runtime_1.exists)(json, 'psp') ? undefined : json['psp'],
        'cFee': !(0, runtime_1.exists)(json, 'cFee') ? undefined : (0, CreateCFeeDto_1.CreateCFeeDtoFromJSON)(json['cFee']),
        'cardTypes': !(0, runtime_1.exists)(json, 'cardTypes') ? undefined : json['cardTypes'],
        'cardSchemes': !(0, runtime_1.exists)(json, 'cardSchemes') ? undefined : json['cardSchemes'],
        'currencies': !(0, runtime_1.exists)(json, 'currencies') ? undefined : json['currencies'],
        'mcc': !(0, runtime_1.exists)(json, 'mcc') ? undefined : json['mcc'],
        'bin': !(0, runtime_1.exists)(json, 'bin') ? undefined : json['bin'],
        'chain': !(0, runtime_1.exists)(json, 'chain') ? undefined : json['chain'],
        'store': !(0, runtime_1.exists)(json, 'store') ? undefined : json['store'],
        'agent': !(0, runtime_1.exists)(json, 'agent') ? undefined : json['agent'],
        'isDefault': !(0, runtime_1.exists)(json, 'isDefault') ? undefined : json['isDefault'],
        'lastPolledAt': !(0, runtime_1.exists)(json, 'lastPolledAt') ? undefined : json['lastPolledAt'],
    };
    return (0, runtime_1.removeNullUndefined)(typed);
}
function UpdateMerchantAccountDtoToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'psp': value.psp,
        'cFee': (0, CreateCFeeDto_1.CreateCFeeDtoToJSON)(value.cFee),
        'cardTypes': value.cardTypes,
        'cardSchemes': value.cardSchemes,
        'currencies': value.currencies,
        'mcc': value.mcc,
        'bin': value.bin,
        'chain': value.chain,
        'store': value.store,
        'agent': value.agent,
        'isDefault': value.isDefault,
        'lastPolledAt': value.lastPolledAt,
    };
}
