/* tslint:disable */
/* eslint-disable */
/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
import { exists, removeNullUndefined } from '../runtime';
/**
 * @export
 */
export const AdminCreateTransactionRefundDtoReasonEnum = {
    CustomerDissatisfaction: 'CUSTOMER_DISSATISFACTION',
    ProductReturned: 'PRODUCT_RETURNED',
    ServiceCancelled: 'SERVICE_CANCELLED',
    OrderCancelled: 'ORDER_CANCELLED',
    Overpayment: 'OVERPAYMENT',
    DuplicateCharge: 'DUPLICATE_CHARGE',
    FraudulentCharge: 'FRAUDULENT_CHARGE',
    ProductNotReceived: 'PRODUCT_NOT_RECEIVED',
    ProductDefective: 'PRODUCT_DEFECTIVE',
    IncorrectProductShipped: 'INCORRECT_PRODUCT_SHIPPED',
    BillingError: 'BILLING_ERROR',
    WarrantyClaim: 'WARRANTY_CLAIM',
    PromotionalAdjustment: 'PROMOTIONAL_ADJUSTMENT',
    ComplianceIssue: 'COMPLIANCE_ISSUE',
    GoodwillGesture: 'GOODWILL_GESTURE',
    SubscriptionCancellation: 'SUBSCRIPTION_CANCELLATION',
    LoanRepaymentAdjustment: 'LOAN_REPAYMENT_ADJUSTMENT',
    RegulatoryRequirement: 'REGULATORY_REQUIREMENT',
    None: 'NONE',
    Other: 'OTHER'
};
/**
 * Check if a given object implements the AdminCreateTransactionRefundDto interface.
 */
export function instanceOfAdminCreateTransactionRefundDto(value) {
    let isInstance = true;
    isInstance = isInstance && "refundAmount" in value;
    isInstance = isInstance && "transactionId" in value;
    isInstance = isInstance && "merchantId" in value;
    return isInstance;
}
export function AdminCreateTransactionRefundDtoFromJSON(json) {
    return AdminCreateTransactionRefundDtoFromJSONTyped(json, false);
}
export function AdminCreateTransactionRefundDtoFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    const typed = {
        'refundAmount': json['refundAmount'],
        'transactionId': json['transactionId'],
        'reason': !exists(json, 'reason') ? undefined : json['reason'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'note': !exists(json, 'note') ? undefined : json['note'],
        'merchantId': json['merchantId'],
    };
    return removeNullUndefined(typed);
}
export function AdminCreateTransactionRefundDtoToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'refundAmount': value.refundAmount,
        'transactionId': value.transactionId,
        'reason': value.reason,
        'description': value.description,
        'note': value.note,
        'merchantId': value.merchantId,
    };
}
