/* tslint:disable */
/* eslint-disable */
/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
import { exists, removeNullUndefined } from '../runtime';
import { AddressEntityFromJSON, AddressEntityToJSON, } from './AddressEntity';
/**
 * Check if a given object implements the BuyerEntity interface.
 */
export function instanceOfBuyerEntity(value) {
    let isInstance = true;
    isInstance = isInstance && "buyerId" in value;
    isInstance = isInstance && "merchantId" in value;
    isInstance = isInstance && "givenName" in value;
    isInstance = isInstance && "familyName" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "address" in value;
    return isInstance;
}
export function BuyerEntityFromJSON(json) {
    return BuyerEntityFromJSONTyped(json, false);
}
export function BuyerEntityFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    const typed = {
        'buyerId': json['buyerId'],
        'merchantId': json['merchantId'],
        'givenName': json['givenName'],
        'familyName': json['familyName'],
        'email': json['email'],
        'address': AddressEntityFromJSON(json['address']),
        'phoneNumber': !exists(json, 'phoneNumber') ? undefined : json['phoneNumber'],
        'externalBuyerId': !exists(json, 'externalBuyerId') ? undefined : json['externalBuyerId'],
        'id': !exists(json, 'id') ? undefined : json['id'],
    };
    return removeNullUndefined(typed);
}
export function BuyerEntityToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'buyerId': value.buyerId,
        'merchantId': value.merchantId,
        'givenName': value.givenName,
        'familyName': value.familyName,
        'email': value.email,
        'address': AddressEntityToJSON(value.address),
        'phoneNumber': value.phoneNumber,
        'externalBuyerId': value.externalBuyerId,
        'id': value.id,
    };
}
