/* tslint:disable */
/* eslint-disable */
/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
import { exists, removeNullUndefined } from '../runtime';
/**
 * @export
 */
export const CardDetailsServiceEntityCardTypeEnum = {
    Credit: 'CREDIT',
    Debit: 'DEBIT',
    Prepaid: 'PREPAID',
    Other: 'OTHER'
};
/**
 * Check if a given object implements the CardDetailsServiceEntity interface.
 */
export function instanceOfCardDetailsServiceEntity(value) {
    let isInstance = true;
    isInstance = isInstance && "cardType" in value;
    isInstance = isInstance && "bin" in value;
    isInstance = isInstance && "scheme" in value;
    isInstance = isInstance && "label" in value;
    isInstance = isInstance && "expirationDate" in value;
    return isInstance;
}
export function CardDetailsServiceEntityFromJSON(json) {
    return CardDetailsServiceEntityFromJSONTyped(json, false);
}
export function CardDetailsServiceEntityFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    const typed = {
        'cardType': json['cardType'],
        'bin': json['bin'],
        'scheme': json['scheme'],
        'label': json['label'],
        'expirationDate': json['expirationDate'],
        'accountHolderName': !exists(json, 'accountHolderName') ? undefined : json['accountHolderName'],
    };
    return removeNullUndefined(typed);
}
export function CardDetailsServiceEntityToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'cardType': value.cardType,
        'bin': value.bin,
        'scheme': value.scheme,
        'label': value.label,
        'expirationDate': value.expirationDate,
        'accountHolderName': value.accountHolderName,
    };
}
