/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
import type { CreateCheckoutSessionItemDto } from './CreateCheckoutSessionItemDto';
import type { TagDto } from './TagDto';
/**
 *
 * @export
 * @interface CreateCheckoutSessionDto
 */
export interface CreateCheckoutSessionDto {
    /**
     * The items of the checkout session.
     * @type {Array<CreateCheckoutSessionItemDto>}
     * @memberof CreateCheckoutSessionDto
     */
    items: Array<CreateCheckoutSessionItemDto>;
    /**
     * Exclude the convenience fee from the checkout session.
     * @type {boolean}
     * @memberof CreateCheckoutSessionDto
     */
    excludeCFee?: boolean;
    /**
     * The URL to redirect to after the checkout session is completed. Must be specified if not configured.
     * @type {string}
     * @memberof CreateCheckoutSessionDto
     */
    successRedirectUrl?: string;
    /**
     * The URL to redirect to after the checkout session is canceled or fails. Must be specified if not configured.
     * @type {string}
     * @memberof CreateCheckoutSessionDto
     */
    cancelRedirectUrl?: string;
    /**
     * The ID of the buyer to associate with the checkout session.
     * @type {string}
     * @memberof CreateCheckoutSessionDto
     */
    buyerId?: string;
    /**
     * The SEC code of the checkout session. Only update for ACH transactions with SEC code other than WEB.
     * @type {string}
     * @memberof CreateCheckoutSessionDto
     */
    secCode?: CreateCheckoutSessionDtoSecCodeEnum;
    /**
     * The ID of the external buyer to associate with the checkout session.
     * @type {string}
     * @memberof CreateCheckoutSessionDto
     */
    externalBuyerId?: string;
    /**
     * The currency of the checkout session. Defaults to USD if not specified.
     * @type {string}
     * @memberof CreateCheckoutSessionDto
     */
    currency?: CreateCheckoutSessionDtoCurrencyEnum;
    /**
     * The 2-letter ISO code of the country of the checkout session.
     * @type {string}
     * @memberof CreateCheckoutSessionDto
     */
    country?: string;
    /**
     * The maximum number of retries allowed for the checkout session.
     * @type {number}
     * @memberof CreateCheckoutSessionDto
     */
    maxAttempts?: number;
    /**
     * The duration of the checkout session in seconds.
     * @type {number}
     * @memberof CreateCheckoutSessionDto
     */
    duration?: number;
    /**
     * External identifier that can be used to match the transactions against your own records
     * @type {string}
     * @memberof CreateCheckoutSessionDto
     */
    externalTransactionId?: string;
    /**
     * The descriptive labels or keywords that are assigned to the transaction.
     * @type {Array<TagDto>}
     * @memberof CreateCheckoutSessionDto
     */
    tags?: Array<TagDto>;
}
/**
 * @export
 */
export declare const CreateCheckoutSessionDtoSecCodeEnum: {
    readonly Ppd: "PPD";
    readonly Ccd: "CCD";
    readonly Web: "WEB";
    readonly Tel: "TEL";
};
export type CreateCheckoutSessionDtoSecCodeEnum = typeof CreateCheckoutSessionDtoSecCodeEnum[keyof typeof CreateCheckoutSessionDtoSecCodeEnum];
/**
 * @export
 */
export declare const CreateCheckoutSessionDtoCurrencyEnum: {
    readonly Usd: "USD";
    readonly Cad: "CAD";
    readonly Aud: "AUD";
};
export type CreateCheckoutSessionDtoCurrencyEnum = typeof CreateCheckoutSessionDtoCurrencyEnum[keyof typeof CreateCheckoutSessionDtoCurrencyEnum];
/**
 * Check if a given object implements the CreateCheckoutSessionDto interface.
 */
export declare function instanceOfCreateCheckoutSessionDto(value: object): boolean;
export declare function CreateCheckoutSessionDtoFromJSON(json: any): CreateCheckoutSessionDto;
export declare function CreateCheckoutSessionDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateCheckoutSessionDto;
export declare function CreateCheckoutSessionDtoToJSON(value?: CreateCheckoutSessionDto | null): any;
