/* tslint:disable */
/* eslint-disable */
/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
import { exists, removeNullUndefined } from '../runtime';
/**
 * @export
 */
export const CreateCheckoutSessionPaymentMethodDtoMethodEnum = {
    Ach: 'ACH',
    Bank: 'BANK',
    Card: 'CARD'
};
/**
 * @export
 */
export const CreateCheckoutSessionPaymentMethodDtoAccountTypeEnum = {
    Checking: 'CHECKING',
    Savings: 'SAVINGS'
};
/**
 * Check if a given object implements the CreateCheckoutSessionPaymentMethodDto interface.
 */
export function instanceOfCreateCheckoutSessionPaymentMethodDto(value) {
    let isInstance = true;
    isInstance = isInstance && "method" in value;
    return isInstance;
}
export function CreateCheckoutSessionPaymentMethodDtoFromJSON(json) {
    return CreateCheckoutSessionPaymentMethodDtoFromJSONTyped(json, false);
}
export function CreateCheckoutSessionPaymentMethodDtoFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    const typed = {
        'method': json['method'],
        'number': !exists(json, 'number') ? undefined : json['number'],
        'securityCode': !exists(json, 'securityCode') ? undefined : json['securityCode'],
        'expirationDate': !exists(json, 'expirationDate') ? undefined : json['expirationDate'],
        'paymentMethodId': !exists(json, 'paymentMethodId') ? undefined : json['paymentMethodId'],
        'store': !exists(json, 'store') ? undefined : json['store'],
        'abaNumber': !exists(json, 'abaNumber') ? undefined : json['abaNumber'],
        'accountNumber': !exists(json, 'accountNumber') ? undefined : json['accountNumber'],
        'accountType': !exists(json, 'accountType') ? undefined : json['accountType'],
    };
    return removeNullUndefined(typed);
}
export function CreateCheckoutSessionPaymentMethodDtoToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'method': value.method,
        'number': value.number,
        'securityCode': value.securityCode,
        'expirationDate': value.expirationDate,
        'paymentMethodId': value.paymentMethodId,
        'store': value.store,
        'abaNumber': value.abaNumber,
        'accountNumber': value.accountNumber,
        'accountType': value.accountType,
    };
}
