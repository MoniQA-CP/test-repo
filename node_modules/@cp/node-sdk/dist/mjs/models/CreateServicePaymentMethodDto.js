/* tslint:disable */
/* eslint-disable */
/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
import { exists, removeNullUndefined } from '../runtime';
import { BillingDetailsDtoFromJSON, BillingDetailsDtoToJSON, } from './BillingDetailsDto';
/**
 * @export
 */
export const CreateServicePaymentMethodDtoMethodEnum = {
    Card: 'CARD',
    Bank: 'BANK'
};
/**
 * @export
 */
export const CreateServicePaymentMethodDtoAccountTypeEnum = {
    Checking: 'CHECKING',
    Savings: 'SAVINGS'
};
/**
 * Check if a given object implements the CreateServicePaymentMethodDto interface.
 */
export function instanceOfCreateServicePaymentMethodDto(value) {
    let isInstance = true;
    isInstance = isInstance && "method" in value;
    return isInstance;
}
export function CreateServicePaymentMethodDtoFromJSON(json) {
    return CreateServicePaymentMethodDtoFromJSONTyped(json, false);
}
export function CreateServicePaymentMethodDtoFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    const typed = {
        'method': json['method'],
        'number': !exists(json, 'number') ? undefined : json['number'],
        'expirationDate': !exists(json, 'expirationDate') ? undefined : json['expirationDate'],
        'abaNumber': !exists(json, 'abaNumber') ? undefined : json['abaNumber'],
        'accountNumber': !exists(json, 'accountNumber') ? undefined : json['accountNumber'],
        'accountType': !exists(json, 'accountType') ? undefined : json['accountType'],
        'accountHolderName': !exists(json, 'accountHolderName') ? undefined : json['accountHolderName'],
        'externalBuyerId': !exists(json, 'externalBuyerId') ? undefined : json['externalBuyerId'],
        'buyerId': !exists(json, 'buyerId') ? undefined : json['buyerId'],
        'externalPaymentMethodId': !exists(json, 'externalPaymentMethodId') ? undefined : json['externalPaymentMethodId'],
        'billingDetails': !exists(json, 'billingDetails') ? undefined : BillingDetailsDtoFromJSON(json['billingDetails']),
        'isCustomerStored': !exists(json, 'isCustomerStored') ? undefined : json['isCustomerStored'],
        'merchantId': !exists(json, 'merchantId') ? undefined : json['merchantId'],
    };
    return removeNullUndefined(typed);
}
export function CreateServicePaymentMethodDtoToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'method': value.method,
        'number': value.number,
        'expirationDate': value.expirationDate,
        'abaNumber': value.abaNumber,
        'accountNumber': value.accountNumber,
        'accountType': value.accountType,
        'accountHolderName': value.accountHolderName,
        'externalBuyerId': value.externalBuyerId,
        'buyerId': value.buyerId,
        'externalPaymentMethodId': value.externalPaymentMethodId,
        'billingDetails': BillingDetailsDtoToJSON(value.billingDetails),
        'isCustomerStored': value.isCustomerStored,
        'merchantId': value.merchantId,
    };
}
