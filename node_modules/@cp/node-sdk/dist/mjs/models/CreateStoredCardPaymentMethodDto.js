/* tslint:disable */
/* eslint-disable */
/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
import { exists, removeNullUndefined } from '../runtime';
import { BillingDetailsDtoFromJSON, BillingDetailsDtoToJSON, } from './BillingDetailsDto';
/**
 * Check if a given object implements the CreateStoredCardPaymentMethodDto interface.
 */
export function instanceOfCreateStoredCardPaymentMethodDto(value) {
    let isInstance = true;
    isInstance = isInstance && "paymentMethodIntegrationId" in value;
    isInstance = isInstance && "integrationId" in value;
    isInstance = isInstance && "merchantId" in value;
    return isInstance;
}
export function CreateStoredCardPaymentMethodDtoFromJSON(json) {
    return CreateStoredCardPaymentMethodDtoFromJSONTyped(json, false);
}
export function CreateStoredCardPaymentMethodDtoFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    const typed = {
        'paymentMethodIntegrationId': json['paymentMethodIntegrationId'],
        'integrationId': json['integrationId'],
        'merchantId': json['merchantId'],
        'buyerId': !exists(json, 'buyerId') ? undefined : json['buyerId'],
        'externalBuyerId': !exists(json, 'externalBuyerId') ? undefined : json['externalBuyerId'],
        'accountHolderName': !exists(json, 'accountHolderName') ? undefined : json['accountHolderName'],
        'billingDetails': !exists(json, 'billingDetails') ? undefined : BillingDetailsDtoFromJSON(json['billingDetails']),
        'isCustomerStored': !exists(json, 'isCustomerStored') ? undefined : json['isCustomerStored'],
    };
    return removeNullUndefined(typed);
}
export function CreateStoredCardPaymentMethodDtoToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'paymentMethodIntegrationId': value.paymentMethodIntegrationId,
        'integrationId': value.integrationId,
        'merchantId': value.merchantId,
        'buyerId': value.buyerId,
        'externalBuyerId': value.externalBuyerId,
        'accountHolderName': value.accountHolderName,
        'billingDetails': BillingDetailsDtoToJSON(value.billingDetails),
        'isCustomerStored': value.isCustomerStored,
    };
}
