/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
/**
 *
 * @export
 * @interface CreateTransactionRefundDto
 */
export interface CreateTransactionRefundDto {
    /**
     * The amount to refund.
     * @type {number}
     * @memberof CreateTransactionRefundDto
     */
    refundAmount: number;
    /**
     * The transaction id to refund.
     * @type {string}
     * @memberof CreateTransactionRefundDto
     */
    transactionId: string;
    /**
     * The reason for the refund.
     * @type {string}
     * @memberof CreateTransactionRefundDto
     */
    reason?: CreateTransactionRefundDtoReasonEnum;
    /**
     * The description for the refund if reason is OTHER.
     * @type {string}
     * @memberof CreateTransactionRefundDto
     */
    description?: string;
    /**
     * The content of the transaction refund note.
     * @type {string}
     * @memberof CreateTransactionRefundDto
     */
    note?: string;
}
/**
 * @export
 */
export declare const CreateTransactionRefundDtoReasonEnum: {
    readonly CustomerDissatisfaction: "CUSTOMER_DISSATISFACTION";
    readonly ProductReturned: "PRODUCT_RETURNED";
    readonly ServiceCancelled: "SERVICE_CANCELLED";
    readonly OrderCancelled: "ORDER_CANCELLED";
    readonly Overpayment: "OVERPAYMENT";
    readonly DuplicateCharge: "DUPLICATE_CHARGE";
    readonly FraudulentCharge: "FRAUDULENT_CHARGE";
    readonly ProductNotReceived: "PRODUCT_NOT_RECEIVED";
    readonly ProductDefective: "PRODUCT_DEFECTIVE";
    readonly IncorrectProductShipped: "INCORRECT_PRODUCT_SHIPPED";
    readonly BillingError: "BILLING_ERROR";
    readonly WarrantyClaim: "WARRANTY_CLAIM";
    readonly PromotionalAdjustment: "PROMOTIONAL_ADJUSTMENT";
    readonly ComplianceIssue: "COMPLIANCE_ISSUE";
    readonly GoodwillGesture: "GOODWILL_GESTURE";
    readonly SubscriptionCancellation: "SUBSCRIPTION_CANCELLATION";
    readonly LoanRepaymentAdjustment: "LOAN_REPAYMENT_ADJUSTMENT";
    readonly RegulatoryRequirement: "REGULATORY_REQUIREMENT";
    readonly None: "NONE";
    readonly Other: "OTHER";
};
export type CreateTransactionRefundDtoReasonEnum = typeof CreateTransactionRefundDtoReasonEnum[keyof typeof CreateTransactionRefundDtoReasonEnum];
/**
 * Check if a given object implements the CreateTransactionRefundDto interface.
 */
export declare function instanceOfCreateTransactionRefundDto(value: object): boolean;
export declare function CreateTransactionRefundDtoFromJSON(json: any): CreateTransactionRefundDto;
export declare function CreateTransactionRefundDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTransactionRefundDto;
export declare function CreateTransactionRefundDtoToJSON(value?: CreateTransactionRefundDto | null): any;
