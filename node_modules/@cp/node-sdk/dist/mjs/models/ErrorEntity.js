/* tslint:disable */
/* eslint-disable */
/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
import { exists, removeNullUndefined } from '../runtime';
/**
 * Check if a given object implements the ErrorEntity interface.
 */
export function instanceOfErrorEntity(value) {
    let isInstance = true;
    return isInstance;
}
export function ErrorEntityFromJSON(json) {
    return ErrorEntityFromJSONTyped(json, false);
}
export function ErrorEntityFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    const typed = {
        'statusCode': !exists(json, 'statusCode') ? undefined : json['statusCode'],
        'message': !exists(json, 'message') ? undefined : json['message'],
        'path': !exists(json, 'path') ? undefined : json['path'],
        'timestamp': !exists(json, 'timestamp') ? undefined : (new Date(json['timestamp'])),
        'method': !exists(json, 'method') ? undefined : json['method'],
        'requestId': !exists(json, 'requestId') ? undefined : json['requestId'],
        'details': !exists(json, 'details') ? undefined : json['details'],
    };
    return removeNullUndefined(typed);
}
export function ErrorEntityToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'statusCode': value.statusCode,
        'message': value.message,
        'path': value.path,
        'timestamp': value.timestamp === undefined ? undefined : (value.timestamp.toISOString()),
        'method': value.method,
        'requestId': value.requestId,
        'details': value.details,
    };
}
