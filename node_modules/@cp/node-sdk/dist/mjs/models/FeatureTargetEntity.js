/* tslint:disable */
/* eslint-disable */
/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
import { removeNullUndefined } from '../runtime';
/**
 * @export
 */
export const FeatureTargetEntityTargetTypeEnum = {
    Merchant: 'merchant',
    User: 'user',
    PaymentMethod: 'payment_method',
    Buyer: 'buyer',
    Webhook: 'webhook',
    Job: 'job'
};
/**
 * Check if a given object implements the FeatureTargetEntity interface.
 */
export function instanceOfFeatureTargetEntity(value) {
    let isInstance = true;
    isInstance = isInstance && "featureId" in value;
    isInstance = isInstance && "targetId" in value;
    isInstance = isInstance && "targetEntityId" in value;
    isInstance = isInstance && "targetType" in value;
    isInstance = isInstance && "rolloutPercentage" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;
    return isInstance;
}
export function FeatureTargetEntityFromJSON(json) {
    return FeatureTargetEntityFromJSONTyped(json, false);
}
export function FeatureTargetEntityFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    const typed = {
        'featureId': json['featureId'],
        'targetId': json['targetId'],
        'targetEntityId': json['targetEntityId'],
        'targetType': json['targetType'],
        'rolloutPercentage': json['rolloutPercentage'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
    };
    return removeNullUndefined(typed);
}
export function FeatureTargetEntityToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'featureId': value.featureId,
        'targetId': value.targetId,
        'targetEntityId': value.targetEntityId,
        'targetType': value.targetType,
        'rolloutPercentage': value.rolloutPercentage,
        'createdAt': (value.createdAt.toISOString()),
        'updatedAt': (value.updatedAt.toISOString()),
    };
}
