/* tslint:disable */
/* eslint-disable */
/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
import { exists, removeNullUndefined } from '../runtime';
/**
 * @export
 */
export const MerchantConnectorServiceEntityConnectorEnum = {
    Epay: 'EPAY',
    AuthorizeNet: 'AUTHORIZE_NET',
    ChannelPayments: 'CHANNEL_PAYMENTS',
    Tsys: 'TSYS'
};
/**
 * @export
 */
export const MerchantConnectorServiceEntityTypeEnum = {
    Gateway: 'GATEWAY',
    Terminal: 'TERMINAL'
};
/**
 * Check if a given object implements the MerchantConnectorServiceEntity interface.
 */
export function instanceOfMerchantConnectorServiceEntity(value) {
    let isInstance = true;
    isInstance = isInstance && "connectorId" in value;
    isInstance = isInstance && "issuedConnectorId" in value;
    isInstance = isInstance && "merchantAccountId" in value;
    isInstance = isInstance && "connector" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "type" in value;
    return isInstance;
}
export function MerchantConnectorServiceEntityFromJSON(json) {
    return MerchantConnectorServiceEntityFromJSONTyped(json, false);
}
export function MerchantConnectorServiceEntityFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    const typed = {
        'connectorId': json['connectorId'],
        'issuedConnectorId': json['issuedConnectorId'],
        'merchantAccountId': json['merchantAccountId'],
        'connector': json['connector'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'type': json['type'],
        'name': !exists(json, 'name') ? undefined : json['name'],
    };
    return removeNullUndefined(typed);
}
export function MerchantConnectorServiceEntityToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'connectorId': value.connectorId,
        'issuedConnectorId': value.issuedConnectorId,
        'merchantAccountId': value.merchantAccountId,
        'connector': value.connector,
        'createdAt': (value.createdAt.toISOString()),
        'updatedAt': (value.updatedAt.toISOString()),
        'type': value.type,
        'name': value.name,
    };
}
