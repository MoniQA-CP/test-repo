/* tslint:disable */
/* eslint-disable */
/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
import { exists, removeNullUndefined } from '../runtime';
import { MerchantThemeEntityFromJSON, MerchantThemeEntityToJSON, } from './MerchantThemeEntity';
/**
 * Check if a given object implements the MerchantSettingsEntity interface.
 */
export function instanceOfMerchantSettingsEntity(value) {
    let isInstance = true;
    isInstance = isInstance && "merchantId" in value;
    isInstance = isInstance && "isSplitCFeeEnabled" in value;
    isInstance = isInstance && "isDebtRepaymentEnabled" in value;
    isInstance = isInstance && "isPartialAuthEnabled" in value;
    return isInstance;
}
export function MerchantSettingsEntityFromJSON(json) {
    return MerchantSettingsEntityFromJSONTyped(json, false);
}
export function MerchantSettingsEntityFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    const typed = {
        'merchantId': json['merchantId'],
        'checkoutTheme': !exists(json, 'checkoutTheme') ? undefined : MerchantThemeEntityFromJSON(json['checkoutTheme']),
        'isSplitCFeeEnabled': json['isSplitCFeeEnabled'],
        'isDebtRepaymentEnabled': json['isDebtRepaymentEnabled'],
        'isPartialAuthEnabled': json['isPartialAuthEnabled'],
    };
    return removeNullUndefined(typed);
}
export function MerchantSettingsEntityToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'merchantId': value.merchantId,
        'checkoutTheme': MerchantThemeEntityToJSON(value.checkoutTheme),
        'isSplitCFeeEnabled': value.isSplitCFeeEnabled,
        'isDebtRepaymentEnabled': value.isDebtRepaymentEnabled,
        'isPartialAuthEnabled': value.isPartialAuthEnabled,
    };
}
