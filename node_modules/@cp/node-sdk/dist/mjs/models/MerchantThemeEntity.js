/* tslint:disable */
/* eslint-disable */
/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
import { exists, removeNullUndefined } from '../runtime';
import { MerchantColorsEntityFromJSON, MerchantColorsEntityToJSON, } from './MerchantColorsEntity';
import { MerchantThemeLogoEntityFromJSON, MerchantThemeLogoEntityToJSON, } from './MerchantThemeLogoEntity';
/**
 * Check if a given object implements the MerchantThemeEntity interface.
 */
export function instanceOfMerchantThemeEntity(value) {
    let isInstance = true;
    isInstance = isInstance && "enabled" in value;
    isInstance = isInstance && "logo" in value;
    return isInstance;
}
export function MerchantThemeEntityFromJSON(json) {
    return MerchantThemeEntityFromJSONTyped(json, false);
}
export function MerchantThemeEntityFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    const typed = {
        'enabled': json['enabled'],
        'logo': MerchantThemeLogoEntityFromJSON(json['logo']),
        'colors': !exists(json, 'colors') ? undefined : MerchantColorsEntityFromJSON(json['colors']),
    };
    return removeNullUndefined(typed);
}
export function MerchantThemeEntityToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'enabled': value.enabled,
        'logo': MerchantThemeLogoEntityToJSON(value.logo),
        'colors': MerchantColorsEntityToJSON(value.colors),
    };
}
