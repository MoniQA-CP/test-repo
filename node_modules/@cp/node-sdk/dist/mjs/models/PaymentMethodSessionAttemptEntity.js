/* tslint:disable */
/* eslint-disable */
/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
import { exists, removeNullUndefined } from '../runtime';
/**
 * @export
 */
export const PaymentMethodSessionAttemptEntityMethodEnum = {
    Card: 'CARD',
    Bank: 'BANK'
};
/**
 * @export
 */
export const PaymentMethodSessionAttemptEntityStatusEnum = {
    Success: 'SUCCESS',
    Failed: 'FAILED'
};
/**
 * Check if a given object implements the PaymentMethodSessionAttemptEntity interface.
 */
export function instanceOfPaymentMethodSessionAttemptEntity(value) {
    let isInstance = true;
    isInstance = isInstance && "method" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "attemptedAt" in value;
    return isInstance;
}
export function PaymentMethodSessionAttemptEntityFromJSON(json) {
    return PaymentMethodSessionAttemptEntityFromJSONTyped(json, false);
}
export function PaymentMethodSessionAttemptEntityFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    const typed = {
        'method': json['method'],
        'status': json['status'],
        'attemptedAt': (new Date(json['attemptedAt'])),
        'reason': !exists(json, 'reason') ? undefined : json['reason'],
    };
    return removeNullUndefined(typed);
}
export function PaymentMethodSessionAttemptEntityToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'method': value.method,
        'status': value.status,
        'attemptedAt': (value.attemptedAt.toISOString()),
        'reason': value.reason,
    };
}
