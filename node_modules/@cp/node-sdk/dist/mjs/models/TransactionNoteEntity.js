/* tslint:disable */
/* eslint-disable */
/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
import { exists, removeNullUndefined } from '../runtime';
import { TransactionNoteHistoryEntityFromJSON, TransactionNoteHistoryEntityToJSON, } from './TransactionNoteHistoryEntity';
/**
 * Check if a given object implements the TransactionNoteEntity interface.
 */
export function instanceOfTransactionNoteEntity(value) {
    let isInstance = true;
    isInstance = isInstance && "noteId" in value;
    isInstance = isInstance && "refundId" in value;
    isInstance = isInstance && "content" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "createdBy" in value;
    return isInstance;
}
export function TransactionNoteEntityFromJSON(json) {
    return TransactionNoteEntityFromJSONTyped(json, false);
}
export function TransactionNoteEntityFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    const typed = {
        'noteId': json['noteId'],
        'refundId': json['refundId'],
        'content': json['content'],
        'createdAt': (new Date(json['createdAt'])),
        'createdBy': json['createdBy'],
        'history': !exists(json, 'history') ? undefined : (json['history'].map(TransactionNoteHistoryEntityFromJSON)),
        'updatedBy': !exists(json, 'updatedBy') ? undefined : json['updatedBy'],
        'deleted': !exists(json, 'deleted') ? undefined : json['deleted'],
        'deletedAt': !exists(json, 'deletedAt') ? undefined : (new Date(json['deletedAt'])),
        'deletedBy': !exists(json, 'deletedBy') ? undefined : json['deletedBy'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
    };
    return removeNullUndefined(typed);
}
export function TransactionNoteEntityToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'noteId': value.noteId,
        'refundId': value.refundId,
        'content': value.content,
        'createdAt': (value.createdAt.toISOString()),
        'createdBy': value.createdBy,
        'history': value.history === undefined ? undefined : (value.history.map(TransactionNoteHistoryEntityToJSON)),
        'updatedBy': value.updatedBy,
        'deleted': value.deleted,
        'deletedAt': value.deletedAt === undefined ? undefined : (value.deletedAt.toISOString()),
        'deletedBy': value.deletedBy,
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
    };
}
