/* tslint:disable */
/* eslint-disable */
/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
import { exists, removeNullUndefined } from '../runtime';
/**
 * @export
 */
export const TransactionPaymentInstrumentBaseEntityMethodEnum = {
    Ach: 'ACH',
    Bank: 'BANK',
    Card: 'CARD'
};
/**
 * @export
 */
export const TransactionPaymentInstrumentBaseEntityCardTypeEnum = {
    Credit: 'CREDIT',
    Debit: 'DEBIT',
    Prepaid: 'PREPAID'
};
/**
 * @export
 */
export const TransactionPaymentInstrumentBaseEntityAccountTypeEnum = {
    Checking: 'CHECKING',
    Savings: 'SAVINGS'
};
/**
 * Check if a given object implements the TransactionPaymentInstrumentBaseEntity interface.
 */
export function instanceOfTransactionPaymentInstrumentBaseEntity(value) {
    let isInstance = true;
    isInstance = isInstance && "paymentMethodId" in value;
    isInstance = isInstance && "method" in value;
    return isInstance;
}
export function TransactionPaymentInstrumentBaseEntityFromJSON(json) {
    return TransactionPaymentInstrumentBaseEntityFromJSONTyped(json, false);
}
export function TransactionPaymentInstrumentBaseEntityFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    const typed = {
        'paymentMethodId': json['paymentMethodId'],
        'method': json['method'],
        'externalPaymentMethodId': !exists(json, 'externalPaymentMethodId') ? undefined : json['externalPaymentMethodId'],
        'label': !exists(json, 'label') ? undefined : json['label'],
        'scheme': !exists(json, 'scheme') ? undefined : json['scheme'],
        'expirationDate': !exists(json, 'expirationDate') ? undefined : json['expirationDate'],
        'currency': !exists(json, 'currency') ? undefined : json['currency'],
        'country': !exists(json, 'country') ? undefined : json['country'],
        'bin': !exists(json, 'bin') ? undefined : json['bin'],
        'cardType': !exists(json, 'cardType') ? undefined : json['cardType'],
        'accountHolderName': !exists(json, 'accountHolderName') ? undefined : json['accountHolderName'],
        'accountNumber': !exists(json, 'accountNumber') ? undefined : json['accountNumber'],
        'accountEnding': !exists(json, 'accountEnding') ? undefined : json['accountEnding'],
        'accountType': !exists(json, 'accountType') ? undefined : json['accountType'],
        'abaNumber': !exists(json, 'abaNumber') ? undefined : json['abaNumber'],
    };
    return removeNullUndefined(typed);
}
export function TransactionPaymentInstrumentBaseEntityToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'paymentMethodId': value.paymentMethodId,
        'method': value.method,
        'externalPaymentMethodId': value.externalPaymentMethodId,
        'label': value.label,
        'scheme': value.scheme,
        'expirationDate': value.expirationDate,
        'currency': value.currency,
        'country': value.country,
        'bin': value.bin,
        'cardType': value.cardType,
        'accountHolderName': value.accountHolderName,
        'accountNumber': value.accountNumber,
        'accountEnding': value.accountEnding,
        'accountType': value.accountType,
        'abaNumber': value.abaNumber,
    };
}
