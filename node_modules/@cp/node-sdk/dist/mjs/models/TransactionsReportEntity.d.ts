/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
import type { ReportCreatorEntity } from './ReportCreatorEntity';
import type { TransactionsReportsFiltersEntity } from './TransactionsReportsFiltersEntity';
/**
 *
 * @export
 * @interface TransactionsReportEntity
 */
export interface TransactionsReportEntity {
    /**
     * The report ID.
     * @type {string}
     * @memberof TransactionsReportEntity
     */
    reportId: string;
    /**
     * The name of the report.
     * @type {string}
     * @memberof TransactionsReportEntity
     */
    name: string;
    /**
     * The description of the report.
     * @type {string}
     * @memberof TransactionsReportEntity
     */
    description?: string;
    /**
     * The merchant ID that stores this report template.
     * @type {string}
     * @memberof TransactionsReportEntity
     */
    merchantId: string;
    /**
     * The ID of the user who created the report.
     * @type {ReportCreatorEntity}
     * @memberof TransactionsReportEntity
     */
    createdBy: ReportCreatorEntity;
    /**
     * The report created date.
     * @type {Date}
     * @memberof TransactionsReportEntity
     */
    createdAt: Date;
    /**
     * The report last updated date.
     * @type {Date}
     * @memberof TransactionsReportEntity
     */
    updatedAt: Date;
    /**
     * The report deleted date.
     * @type {Date}
     * @memberof TransactionsReportEntity
     */
    deletedAt: Date;
    /**
     * Whether the report record is deleted or not.
     * @type {boolean}
     * @memberof TransactionsReportEntity
     */
    deleted?: boolean;
    /**
     * The start date for the date filter.
     * @type {string}
     * @memberof TransactionsReportEntity
     */
    startDate: string;
    /**
     * The end date for the date filter.
     * @type {string}
     * @memberof TransactionsReportEntity
     */
    endDate: string;
    /**
     * The status of the report.
     * @type {string}
     * @memberof TransactionsReportEntity
     */
    status: TransactionsReportEntityStatusEnum;
    /**
     * The sorting order of the report.
     * @type {string}
     * @memberof TransactionsReportEntity
     */
    order: TransactionsReportEntityOrderEnum;
    /**
     * The recipients of this report.
     * @type {Array<string>}
     * @memberof TransactionsReportEntity
     */
    recipients: Array<string>;
    /**
     * The date range applied for this report.
     * @type {string}
     * @memberof TransactionsReportEntity
     */
    dateRange: TransactionsReportEntityDateRangeEnum;
    /**
     * The start time for this report.
     * @type {string}
     * @memberof TransactionsReportEntity
     */
    startTime: string;
    /**
     * The end time for this report.
     * @type {string}
     * @memberof TransactionsReportEntity
     */
    endTime: string;
    /**
     * The columns associated to this report.
     * @type {Array<string>}
     * @memberof TransactionsReportEntity
     */
    columns: Array<string>;
    /**
     * The filters associated to this report.
     * @type {TransactionsReportsFiltersEntity}
     * @memberof TransactionsReportEntity
     */
    transactionsFilters: TransactionsReportsFiltersEntity;
}
/**
 * @export
 */
export declare const TransactionsReportEntityStatusEnum: {
    readonly Pending: "PENDING";
    readonly Processing: "PROCESSING";
    readonly Generated: "GENERATED";
    readonly Failed: "FAILED";
};
export type TransactionsReportEntityStatusEnum = typeof TransactionsReportEntityStatusEnum[keyof typeof TransactionsReportEntityStatusEnum];
/**
 * @export
 */
export declare const TransactionsReportEntityOrderEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type TransactionsReportEntityOrderEnum = typeof TransactionsReportEntityOrderEnum[keyof typeof TransactionsReportEntityOrderEnum];
/**
 * @export
 */
export declare const TransactionsReportEntityDateRangeEnum: {
    readonly Today: "TODAY";
    readonly Yesterday: "YESTERDAY";
    readonly Last7Days: "LAST_7_DAYS";
    readonly Last30Days: "LAST_30_DAYS";
    readonly Last60Days: "LAST_60_DAYS";
    readonly Last90Days: "LAST_90_DAYS";
    readonly LastWeek: "LAST_WEEK";
    readonly LastMonth: "LAST_MONTH";
    readonly LastQuarter: "LAST_QUARTER";
    readonly LastYear: "LAST_YEAR";
    readonly Custom: "CUSTOM";
};
export type TransactionsReportEntityDateRangeEnum = typeof TransactionsReportEntityDateRangeEnum[keyof typeof TransactionsReportEntityDateRangeEnum];
/**
 * Check if a given object implements the TransactionsReportEntity interface.
 */
export declare function instanceOfTransactionsReportEntity(value: object): boolean;
export declare function TransactionsReportEntityFromJSON(json: any): TransactionsReportEntity;
export declare function TransactionsReportEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionsReportEntity;
export declare function TransactionsReportEntityToJSON(value?: TransactionsReportEntity | null): any;
