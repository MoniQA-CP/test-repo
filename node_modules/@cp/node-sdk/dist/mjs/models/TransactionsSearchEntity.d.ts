/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
import type { TransactionEntity } from './TransactionEntity';
/**
 *
 * @export
 * @interface TransactionsSearchEntity
 */
export interface TransactionsSearchEntity {
    /**
     * The list of queried transactions
     * @type {Array<TransactionEntity>}
     * @memberof TransactionsSearchEntity
     */
    transactions: Array<TransactionEntity>;
    /**
     * The number of records returned
     * @type {number}
     * @memberof TransactionsSearchEntity
     */
    limit: number;
    /**
     * The page number
     * @type {number}
     * @memberof TransactionsSearchEntity
     */
    page: number;
    /**
     * The number of pages
     * @type {number}
     * @memberof TransactionsSearchEntity
     */
    pageCount: number;
    /**
     * The total number of records
     * @type {number}
     * @memberof TransactionsSearchEntity
     */
    totalCount: number;
    /**
     * The total number of records returned
     * @type {number}
     * @memberof TransactionsSearchEntity
     */
    filteredCount: number;
    /**
     * The next cursor
     * @type {string}
     * @memberof TransactionsSearchEntity
     */
    nextCursor?: string;
    /**
     * The previous cursor
     * @type {string}
     * @memberof TransactionsSearchEntity
     */
    prevCursor?: string;
}
/**
 * Check if a given object implements the TransactionsSearchEntity interface.
 */
export declare function instanceOfTransactionsSearchEntity(value: object): boolean;
export declare function TransactionsSearchEntityFromJSON(json: any): TransactionsSearchEntity;
export declare function TransactionsSearchEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionsSearchEntity;
export declare function TransactionsSearchEntityToJSON(value?: TransactionsSearchEntity | null): any;
