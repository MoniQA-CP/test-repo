/* tslint:disable */
/* eslint-disable */
/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
import { exists, removeNullUndefined } from '../runtime';
import { CreateMerchantAddressDtoFromJSON, CreateMerchantAddressDtoToJSON, } from './CreateMerchantAddressDto';
/**
 * Check if a given object implements the UpdateMerchantDto interface.
 */
export function instanceOfUpdateMerchantDto(value) {
    let isInstance = true;
    isInstance = isInstance && "merchantId" in value;
    return isInstance;
}
export function UpdateMerchantDtoFromJSON(json) {
    return UpdateMerchantDtoFromJSONTyped(json, false);
}
export function UpdateMerchantDtoFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    const typed = {
        'name': !exists(json, 'name') ? undefined : json['name'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'phoneNumber': !exists(json, 'phoneNumber') ? undefined : json['phoneNumber'],
        'address': !exists(json, 'address') ? undefined : CreateMerchantAddressDtoFromJSON(json['address']),
        'website': !exists(json, 'website') ? undefined : json['website'],
        'merchantId': json['merchantId'],
        'cancelRedirectUrl': !exists(json, 'cancelRedirectUrl') ? undefined : json['cancelRedirectUrl'],
        'successRedirectUrl': !exists(json, 'successRedirectUrl') ? undefined : json['successRedirectUrl'],
        'logo': !exists(json, 'logo') ? undefined : json['logo'],
    };
    return removeNullUndefined(typed);
}
export function UpdateMerchantDtoToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': value.name,
        'email': value.email,
        'phoneNumber': value.phoneNumber,
        'address': CreateMerchantAddressDtoToJSON(value.address),
        'website': value.website,
        'merchantId': value.merchantId,
        'cancelRedirectUrl': value.cancelRedirectUrl,
        'successRedirectUrl': value.successRedirectUrl,
        'logo': value.logo,
    };
}
