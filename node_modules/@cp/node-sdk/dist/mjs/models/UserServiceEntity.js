/* tslint:disable */
/* eslint-disable */
/**
 * Channel Payments API
 *
 * NOTE: This class is auto generated. Do not edit the class manually.
 *
 */
import { exists, removeNullUndefined } from '../runtime';
/**
 * @export
 */
export const UserServiceEntityRoleEnum = {
    User: 'user',
    Agent: 'agent',
    Admin: 'admin',
    SuperAdmin: 'superAdmin'
};
/**
 * @export
 */
export const UserServiceEntityStatusEnum = {
    Invited: 'invited',
    Active: 'active',
    Inactive: 'inactive',
    Blocked: 'blocked'
};
/**
 * Check if a given object implements the UserServiceEntity interface.
 */
export function instanceOfUserServiceEntity(value) {
    let isInstance = true;
    isInstance = isInstance && "userId" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "givenName" in value;
    isInstance = isInstance && "familyName" in value;
    isInstance = isInstance && "merchantId" in value;
    isInstance = isInstance && "role" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;
    return isInstance;
}
export function UserServiceEntityFromJSON(json) {
    return UserServiceEntityFromJSONTyped(json, false);
}
export function UserServiceEntityFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    const typed = {
        'userId': json['userId'],
        'email': json['email'],
        'givenName': json['givenName'],
        'familyName': json['familyName'],
        'merchantId': json['merchantId'],
        'role': json['role'],
        'status': json['status'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'phoneNumber': !exists(json, 'phoneNumber') ? undefined : json['phoneNumber'],
    };
    return removeNullUndefined(typed);
}
export function UserServiceEntityToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'userId': value.userId,
        'email': value.email,
        'givenName': value.givenName,
        'familyName': value.familyName,
        'merchantId': value.merchantId,
        'role': value.role,
        'status': value.status,
        'createdAt': (value.createdAt.toISOString()),
        'updatedAt': (value.updatedAt.toISOString()),
        'phoneNumber': value.phoneNumber,
    };
}
